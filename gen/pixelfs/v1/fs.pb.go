// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: pixelfs/v1/fs.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileType int32

const (
	FileType_UNKNOWN  FileType = 0
	FileType_NODE     FileType = 1
	FileType_LOCATION FileType = 2
	FileType_DIR      FileType = 3
	FileType_IMAGE    FileType = 4
	FileType_VIDEO    FileType = 5
	FileType_AUDIO    FileType = 6
	FileType_DOCUMENT FileType = 7
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "UNKNOWN",
		1: "NODE",
		2: "LOCATION",
		3: "DIR",
		4: "IMAGE",
		5: "VIDEO",
		6: "AUDIO",
		7: "DOCUMENT",
	}
	FileType_value = map[string]int32{
		"UNKNOWN":  0,
		"NODE":     1,
		"LOCATION": 2,
		"DIR":      3,
		"IMAGE":    4,
		"VIDEO":    5,
		"AUDIO":    6,
		"DOCUMENT": 7,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_pixelfs_v1_fs_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_pixelfs_v1_fs_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{0}
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       FileType               `protobuf:"varint,2,opt,name=type,proto3,enum=pixelfs.v1.FileType" json:"type,omitempty"`
	Size       int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Perm       uint32                 `protobuf:"varint,4,opt,name=perm,proto3" json:"perm,omitempty"`
	Hash       string                 `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	User       string                 `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Duration   float64                `protobuf:"fixed64,7,opt,name=duration,proto3" json:"duration,omitempty"`
	ModifiedAt *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	Extensions map[string]*anypb.Any  `protobuf:"bytes,20,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_UNKNOWN
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetPerm() uint32 {
	if x != nil {
		return x.Perm
	}
	return 0
}

func (x *File) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *File) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *File) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *File) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *File) GetExtensions() map[string]*anypb.Any {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type FileContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Path     string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FileContext) Reset() {
	*x = FileContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileContext) ProtoMessage() {}

func (x *FileContext) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileContext.ProtoReflect.Descriptor instead.
func (*FileContext) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{1}
}

func (x *FileContext) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *FileContext) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *FileContext) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *FileContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *FileListRequest) Reset() {
	*x = FileListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListRequest) ProtoMessage() {}

func (x *FileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListRequest.ProtoReflect.Descriptor instead.
func (*FileListRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{2}
}

func (x *FileListRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type FileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *FileListResponse) Reset() {
	*x = FileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListResponse) ProtoMessage() {}

func (x *FileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListResponse.ProtoReflect.Descriptor instead.
func (*FileListResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{3}
}

func (x *FileListResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context  *FileContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Hash     bool         `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Duration bool         `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *FileStatRequest) Reset() {
	*x = FileStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatRequest) ProtoMessage() {}

func (x *FileStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatRequest.ProtoReflect.Descriptor instead.
func (*FileStatRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{4}
}

func (x *FileStatRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *FileStatRequest) GetHash() bool {
	if x != nil {
		return x.Hash
	}
	return false
}

func (x *FileStatRequest) GetDuration() bool {
	if x != nil {
		return x.Duration
	}
	return false
}

type FileStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *FileStatResponse) Reset() {
	*x = FileStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatResponse) ProtoMessage() {}

func (x *FileStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatResponse.ProtoReflect.Descriptor instead.
func (*FileStatResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{5}
}

func (x *FileStatResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type FileCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *FileContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *FileCreateRequest) Reset() {
	*x = FileCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCreateRequest) ProtoMessage() {}

func (x *FileCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCreateRequest.ProtoReflect.Descriptor instead.
func (*FileCreateRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{6}
}

func (x *FileCreateRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type FileCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileCreateResponse) Reset() {
	*x = FileCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCreateResponse) ProtoMessage() {}

func (x *FileCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCreateResponse.ProtoReflect.Descriptor instead.
func (*FileCreateResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{7}
}

type FileRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context   *FileContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Recursive bool         `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
}

func (x *FileRemoveRequest) Reset() {
	*x = FileRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRemoveRequest) ProtoMessage() {}

func (x *FileRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRemoveRequest.ProtoReflect.Descriptor instead.
func (*FileRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{8}
}

func (x *FileRemoveRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *FileRemoveRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type FileRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileRemoveResponse) Reset() {
	*x = FileRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRemoveResponse) ProtoMessage() {}

func (x *FileRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRemoveResponse.ProtoReflect.Descriptor instead.
func (*FileRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{9}
}

type FileCopyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src  *FileContext `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dest *FileContext `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
}

func (x *FileCopyRequest) Reset() {
	*x = FileCopyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCopyRequest) ProtoMessage() {}

func (x *FileCopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCopyRequest.ProtoReflect.Descriptor instead.
func (*FileCopyRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{10}
}

func (x *FileCopyRequest) GetSrc() *FileContext {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *FileCopyRequest) GetDest() *FileContext {
	if x != nil {
		return x.Dest
	}
	return nil
}

type FileCopyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileCopyResponse) Reset() {
	*x = FileCopyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCopyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCopyResponse) ProtoMessage() {}

func (x *FileCopyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCopyResponse.ProtoReflect.Descriptor instead.
func (*FileCopyResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{11}
}

type FileMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src  *FileContext `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dest *FileContext `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
}

func (x *FileMoveRequest) Reset() {
	*x = FileMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMoveRequest) ProtoMessage() {}

func (x *FileMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMoveRequest.ProtoReflect.Descriptor instead.
func (*FileMoveRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{12}
}

func (x *FileMoveRequest) GetSrc() *FileContext {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *FileMoveRequest) GetDest() *FileContext {
	if x != nil {
		return x.Dest
	}
	return nil
}

type FileMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileMoveResponse) Reset() {
	*x = FileMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMoveResponse) ProtoMessage() {}

func (x *FileMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMoveResponse.ProtoReflect.Descriptor instead.
func (*FileMoveResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{13}
}

type FileMkdirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *FileContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *FileMkdirRequest) Reset() {
	*x = FileMkdirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMkdirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMkdirRequest) ProtoMessage() {}

func (x *FileMkdirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMkdirRequest.ProtoReflect.Descriptor instead.
func (*FileMkdirRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{14}
}

func (x *FileMkdirRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type FileMkdirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileMkdirResponse) Reset() {
	*x = FileMkdirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMkdirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMkdirResponse) ProtoMessage() {}

func (x *FileMkdirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMkdirResponse.ProtoReflect.Descriptor instead.
func (*FileMkdirResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{15}
}

type FileReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context       *FileContext   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	BlockType     BlockType      `protobuf:"varint,2,opt,name=block_type,json=blockType,proto3,enum=pixelfs.v1.BlockType" json:"block_type,omitempty"`
	BlockIndex    int64          `protobuf:"varint,3,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	BlockSettings *BlockSettings `protobuf:"bytes,4,opt,name=block_settings,json=blockSettings,proto3" json:"block_settings,omitempty"`
}

func (x *FileReadRequest) Reset() {
	*x = FileReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReadRequest) ProtoMessage() {}

func (x *FileReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReadRequest.ProtoReflect.Descriptor instead.
func (*FileReadRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{16}
}

func (x *FileReadRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *FileReadRequest) GetBlockType() BlockType {
	if x != nil {
		return x.BlockType
	}
	return BlockType_SIZE
}

func (x *FileReadRequest) GetBlockIndex() int64 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *FileReadRequest) GetBlockSettings() *BlockSettings {
	if x != nil {
		return x.BlockSettings
	}
	return nil
}

type FileReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId     string      `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	BlockStatus BlockStatus `protobuf:"varint,2,opt,name=block_status,json=blockStatus,proto3,enum=pixelfs.v1.BlockStatus" json:"block_status,omitempty"`
	BlockSize   int64       `protobuf:"varint,3,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Url         string      `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *FileReadResponse) Reset() {
	*x = FileReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReadResponse) ProtoMessage() {}

func (x *FileReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReadResponse.ProtoReflect.Descriptor instead.
func (*FileReadResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{17}
}

func (x *FileReadResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *FileReadResponse) GetBlockStatus() BlockStatus {
	if x != nil {
		return x.BlockStatus
	}
	return BlockStatus_PENDING
}

func (x *FileReadResponse) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *FileReadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FileWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context    *FileContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Hash       string       `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	BlockType  BlockType    `protobuf:"varint,3,opt,name=block_type,json=blockType,proto3,enum=pixelfs.v1.BlockType" json:"block_type,omitempty"`
	BlockIndex int64        `protobuf:"varint,4,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	Offset     int64        `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"` // force specified offset, suitable for cross-node replication
	Url        string       `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *FileWriteRequest) Reset() {
	*x = FileWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWriteRequest) ProtoMessage() {}

func (x *FileWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWriteRequest.ProtoReflect.Descriptor instead.
func (*FileWriteRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{18}
}

func (x *FileWriteRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *FileWriteRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileWriteRequest) GetBlockType() BlockType {
	if x != nil {
		return x.BlockType
	}
	return BlockType_SIZE
}

func (x *FileWriteRequest) GetBlockIndex() int64 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *FileWriteRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileWriteRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FileWriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileWriteResponse) Reset() {
	*x = FileWriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWriteResponse) ProtoMessage() {}

func (x *FileWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWriteResponse.ProtoReflect.Descriptor instead.
func (*FileWriteResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{19}
}

type FileM3U8Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context       *FileContext   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	BlockSettings *BlockSettings `protobuf:"bytes,2,opt,name=block_settings,json=blockSettings,proto3" json:"block_settings,omitempty"`
}

func (x *FileM3U8Request) Reset() {
	*x = FileM3U8Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileM3U8Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileM3U8Request) ProtoMessage() {}

func (x *FileM3U8Request) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileM3U8Request.ProtoReflect.Descriptor instead.
func (*FileM3U8Request) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{20}
}

func (x *FileM3U8Request) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *FileM3U8Request) GetBlockSettings() *BlockSettings {
	if x != nil {
		return x.BlockSettings
	}
	return nil
}

type FileM3U8Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string  `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Duration float64 `protobuf:"fixed64,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *FileM3U8Response) Reset() {
	*x = FileM3U8Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_fs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileM3U8Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileM3U8Response) ProtoMessage() {}

func (x *FileM3U8Response) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_fs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileM3U8Response.ProtoReflect.Descriptor instead.
func (*FileM3U8Response) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_fs_proto_rawDescGZIP(), []int{21}
}

func (x *FileM3U8Response) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileM3U8Response) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

var File_pixelfs_v1_fs_proto protoreflect.FileDescriptor

var file_pixelfs_v1_fs_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x16, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x03, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x53, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x08,
	0x10, 0x13, 0x22, 0x56, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x44, 0x0a, 0x0f, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x3a, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x0f,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x11,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x11, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x72, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x73, 0x72, 0x63, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x74, 0x22, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03,
	0x73, 0x72, 0x63, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74,
	0x22, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xdd, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x40,
	0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x9a, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xda, 0x01,
	0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x46, 0x69,
	0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x86, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x33, 0x55, 0x38, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x33, 0x55, 0x38, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x67, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x49, 0x52, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x07, 0x32, 0xd7, 0x05, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x04, 0x43, 0x6f, 0x70,
	0x79, 0x12, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x1c, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6b,
	0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x04, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x04, 0x4d, 0x33, 0x55, 0x38,
	0x12, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x33, 0x55, 0x38, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x33, 0x55, 0x38, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b, 0x5a,
	0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pixelfs_v1_fs_proto_rawDescOnce sync.Once
	file_pixelfs_v1_fs_proto_rawDescData = file_pixelfs_v1_fs_proto_rawDesc
)

func file_pixelfs_v1_fs_proto_rawDescGZIP() []byte {
	file_pixelfs_v1_fs_proto_rawDescOnce.Do(func() {
		file_pixelfs_v1_fs_proto_rawDescData = protoimpl.X.CompressGZIP(file_pixelfs_v1_fs_proto_rawDescData)
	})
	return file_pixelfs_v1_fs_proto_rawDescData
}

var file_pixelfs_v1_fs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pixelfs_v1_fs_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pixelfs_v1_fs_proto_goTypes = []interface{}{
	(FileType)(0),                 // 0: pixelfs.v1.FileType
	(*File)(nil),                  // 1: pixelfs.v1.File
	(*FileContext)(nil),           // 2: pixelfs.v1.FileContext
	(*FileListRequest)(nil),       // 3: pixelfs.v1.FileListRequest
	(*FileListResponse)(nil),      // 4: pixelfs.v1.FileListResponse
	(*FileStatRequest)(nil),       // 5: pixelfs.v1.FileStatRequest
	(*FileStatResponse)(nil),      // 6: pixelfs.v1.FileStatResponse
	(*FileCreateRequest)(nil),     // 7: pixelfs.v1.FileCreateRequest
	(*FileCreateResponse)(nil),    // 8: pixelfs.v1.FileCreateResponse
	(*FileRemoveRequest)(nil),     // 9: pixelfs.v1.FileRemoveRequest
	(*FileRemoveResponse)(nil),    // 10: pixelfs.v1.FileRemoveResponse
	(*FileCopyRequest)(nil),       // 11: pixelfs.v1.FileCopyRequest
	(*FileCopyResponse)(nil),      // 12: pixelfs.v1.FileCopyResponse
	(*FileMoveRequest)(nil),       // 13: pixelfs.v1.FileMoveRequest
	(*FileMoveResponse)(nil),      // 14: pixelfs.v1.FileMoveResponse
	(*FileMkdirRequest)(nil),      // 15: pixelfs.v1.FileMkdirRequest
	(*FileMkdirResponse)(nil),     // 16: pixelfs.v1.FileMkdirResponse
	(*FileReadRequest)(nil),       // 17: pixelfs.v1.FileReadRequest
	(*FileReadResponse)(nil),      // 18: pixelfs.v1.FileReadResponse
	(*FileWriteRequest)(nil),      // 19: pixelfs.v1.FileWriteRequest
	(*FileWriteResponse)(nil),     // 20: pixelfs.v1.FileWriteResponse
	(*FileM3U8Request)(nil),       // 21: pixelfs.v1.FileM3U8Request
	(*FileM3U8Response)(nil),      // 22: pixelfs.v1.FileM3U8Response
	nil,                           // 23: pixelfs.v1.File.ExtensionsEntry
	(*timestamppb.Timestamp)(nil), // 24: google.protobuf.Timestamp
	(BlockType)(0),                // 25: pixelfs.v1.BlockType
	(*BlockSettings)(nil),         // 26: pixelfs.v1.BlockSettings
	(BlockStatus)(0),              // 27: pixelfs.v1.BlockStatus
	(*anypb.Any)(nil),             // 28: google.protobuf.Any
}
var file_pixelfs_v1_fs_proto_depIdxs = []int32{
	0,  // 0: pixelfs.v1.File.type:type_name -> pixelfs.v1.FileType
	24, // 1: pixelfs.v1.File.modified_at:type_name -> google.protobuf.Timestamp
	23, // 2: pixelfs.v1.File.extensions:type_name -> pixelfs.v1.File.ExtensionsEntry
	2,  // 3: pixelfs.v1.FileListRequest.context:type_name -> pixelfs.v1.FileContext
	1,  // 4: pixelfs.v1.FileListResponse.files:type_name -> pixelfs.v1.File
	2,  // 5: pixelfs.v1.FileStatRequest.context:type_name -> pixelfs.v1.FileContext
	1,  // 6: pixelfs.v1.FileStatResponse.file:type_name -> pixelfs.v1.File
	2,  // 7: pixelfs.v1.FileCreateRequest.context:type_name -> pixelfs.v1.FileContext
	2,  // 8: pixelfs.v1.FileRemoveRequest.context:type_name -> pixelfs.v1.FileContext
	2,  // 9: pixelfs.v1.FileCopyRequest.src:type_name -> pixelfs.v1.FileContext
	2,  // 10: pixelfs.v1.FileCopyRequest.dest:type_name -> pixelfs.v1.FileContext
	2,  // 11: pixelfs.v1.FileMoveRequest.src:type_name -> pixelfs.v1.FileContext
	2,  // 12: pixelfs.v1.FileMoveRequest.dest:type_name -> pixelfs.v1.FileContext
	2,  // 13: pixelfs.v1.FileMkdirRequest.context:type_name -> pixelfs.v1.FileContext
	2,  // 14: pixelfs.v1.FileReadRequest.context:type_name -> pixelfs.v1.FileContext
	25, // 15: pixelfs.v1.FileReadRequest.block_type:type_name -> pixelfs.v1.BlockType
	26, // 16: pixelfs.v1.FileReadRequest.block_settings:type_name -> pixelfs.v1.BlockSettings
	27, // 17: pixelfs.v1.FileReadResponse.block_status:type_name -> pixelfs.v1.BlockStatus
	2,  // 18: pixelfs.v1.FileWriteRequest.context:type_name -> pixelfs.v1.FileContext
	25, // 19: pixelfs.v1.FileWriteRequest.block_type:type_name -> pixelfs.v1.BlockType
	2,  // 20: pixelfs.v1.FileM3U8Request.context:type_name -> pixelfs.v1.FileContext
	26, // 21: pixelfs.v1.FileM3U8Request.block_settings:type_name -> pixelfs.v1.BlockSettings
	28, // 22: pixelfs.v1.File.ExtensionsEntry.value:type_name -> google.protobuf.Any
	3,  // 23: pixelfs.v1.FileSystemService.List:input_type -> pixelfs.v1.FileListRequest
	5,  // 24: pixelfs.v1.FileSystemService.Stat:input_type -> pixelfs.v1.FileStatRequest
	7,  // 25: pixelfs.v1.FileSystemService.Create:input_type -> pixelfs.v1.FileCreateRequest
	9,  // 26: pixelfs.v1.FileSystemService.Remove:input_type -> pixelfs.v1.FileRemoveRequest
	11, // 27: pixelfs.v1.FileSystemService.Copy:input_type -> pixelfs.v1.FileCopyRequest
	13, // 28: pixelfs.v1.FileSystemService.Move:input_type -> pixelfs.v1.FileMoveRequest
	15, // 29: pixelfs.v1.FileSystemService.Mkdir:input_type -> pixelfs.v1.FileMkdirRequest
	17, // 30: pixelfs.v1.FileSystemService.Read:input_type -> pixelfs.v1.FileReadRequest
	19, // 31: pixelfs.v1.FileSystemService.Write:input_type -> pixelfs.v1.FileWriteRequest
	21, // 32: pixelfs.v1.FileSystemService.M3U8:input_type -> pixelfs.v1.FileM3U8Request
	4,  // 33: pixelfs.v1.FileSystemService.List:output_type -> pixelfs.v1.FileListResponse
	6,  // 34: pixelfs.v1.FileSystemService.Stat:output_type -> pixelfs.v1.FileStatResponse
	8,  // 35: pixelfs.v1.FileSystemService.Create:output_type -> pixelfs.v1.FileCreateResponse
	10, // 36: pixelfs.v1.FileSystemService.Remove:output_type -> pixelfs.v1.FileRemoveResponse
	12, // 37: pixelfs.v1.FileSystemService.Copy:output_type -> pixelfs.v1.FileCopyResponse
	14, // 38: pixelfs.v1.FileSystemService.Move:output_type -> pixelfs.v1.FileMoveResponse
	16, // 39: pixelfs.v1.FileSystemService.Mkdir:output_type -> pixelfs.v1.FileMkdirResponse
	18, // 40: pixelfs.v1.FileSystemService.Read:output_type -> pixelfs.v1.FileReadResponse
	20, // 41: pixelfs.v1.FileSystemService.Write:output_type -> pixelfs.v1.FileWriteResponse
	22, // 42: pixelfs.v1.FileSystemService.M3U8:output_type -> pixelfs.v1.FileM3U8Response
	33, // [33:43] is the sub-list for method output_type
	23, // [23:33] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_pixelfs_v1_fs_proto_init() }
func file_pixelfs_v1_fs_proto_init() {
	if File_pixelfs_v1_fs_proto != nil {
		return
	}
	file_pixelfs_v1_block_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pixelfs_v1_fs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCopyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCopyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMkdirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMkdirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileWriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileM3U8Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_fs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileM3U8Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pixelfs_v1_fs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pixelfs_v1_fs_proto_goTypes,
		DependencyIndexes: file_pixelfs_v1_fs_proto_depIdxs,
		EnumInfos:         file_pixelfs_v1_fs_proto_enumTypes,
		MessageInfos:      file_pixelfs_v1_fs_proto_msgTypes,
	}.Build()
	File_pixelfs_v1_fs_proto = out.File
	file_pixelfs_v1_fs_proto_rawDesc = nil
	file_pixelfs_v1_fs_proto_goTypes = nil
	file_pixelfs_v1_fs_proto_depIdxs = nil
}
