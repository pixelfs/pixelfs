// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: pixelfs/v1/storage.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageType int32

const (
	StorageType_S3 StorageType = 0
)

// Enum value maps for StorageType.
var (
	StorageType_name = map[int32]string{
		0: "S3",
	}
	StorageType_value = map[string]int32{
		"S3": 0,
	}
)

func (x StorageType) Enum() *StorageType {
	p := new(StorageType)
	*p = x
	return p
}

func (x StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_pixelfs_v1_storage_proto_enumTypes[0].Descriptor()
}

func (StorageType) Type() protoreflect.EnumType {
	return &file_pixelfs_v1_storage_proto_enumTypes[0]
}

func (x StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageType.Descriptor instead.
func (StorageType) EnumDescriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{0}
}

type StorageNetwork int32

const (
	StorageNetwork_PUBLIC  StorageNetwork = 0
	StorageNetwork_PRIVATE StorageNetwork = 1
)

// Enum value maps for StorageNetwork.
var (
	StorageNetwork_name = map[int32]string{
		0: "PUBLIC",
		1: "PRIVATE",
	}
	StorageNetwork_value = map[string]int32{
		"PUBLIC":  0,
		"PRIVATE": 1,
	}
)

func (x StorageNetwork) Enum() *StorageNetwork {
	p := new(StorageNetwork)
	*p = x
	return p
}

func (x StorageNetwork) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageNetwork) Descriptor() protoreflect.EnumDescriptor {
	return file_pixelfs_v1_storage_proto_enumTypes[1].Descriptor()
}

func (StorageNetwork) Type() protoreflect.EnumType {
	return &file_pixelfs_v1_storage_proto_enumTypes[1]
}

func (x StorageNetwork) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageNetwork.Descriptor instead.
func (StorageNetwork) EnumDescriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{1}
}

type Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type    StorageType    `protobuf:"varint,3,opt,name=type,proto3,enum=pixelfs.v1.StorageType" json:"type,omitempty"`
	Network StorageNetwork `protobuf:"varint,4,opt,name=network,proto3,enum=pixelfs.v1.StorageNetwork" json:"network,omitempty"`
	// Types that are assignable to Config:
	//
	//	*Storage_S3
	Config isStorage_Config `protobuf_oneof:"config"`
}

func (x *Storage) Reset() {
	*x = Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{0}
}

func (x *Storage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Storage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Storage) GetType() StorageType {
	if x != nil {
		return x.Type
	}
	return StorageType_S3
}

func (x *Storage) GetNetwork() StorageNetwork {
	if x != nil {
		return x.Network
	}
	return StorageNetwork_PUBLIC
}

func (m *Storage) GetConfig() isStorage_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *Storage) GetS3() *StorageS3Config {
	if x, ok := x.GetConfig().(*Storage_S3); ok {
		return x.S3
	}
	return nil
}

type isStorage_Config interface {
	isStorage_Config()
}

type Storage_S3 struct {
	S3 *StorageS3Config `protobuf:"bytes,5,opt,name=s3,proto3,oneof"`
}

func (*Storage_S3) isStorage_Config() {}

type StorageLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StorageId  string `protobuf:"bytes,2,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	NodeId     string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	LocationId string `protobuf:"bytes,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	LimitSize  int64  `protobuf:"varint,5,opt,name=limit_size,json=limitSize,proto3" json:"limit_size,omitempty"`
	UsedSize   int64  `protobuf:"varint,6,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
}

func (x *StorageLink) Reset() {
	*x = StorageLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageLink) ProtoMessage() {}

func (x *StorageLink) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageLink.ProtoReflect.Descriptor instead.
func (*StorageLink) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{1}
}

func (x *StorageLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StorageLink) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *StorageLink) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StorageLink) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *StorageLink) GetLimitSize() int64 {
	if x != nil {
		return x.LimitSize
	}
	return 0
}

func (x *StorageLink) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

type StorageS3Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint  string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey string `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Region    string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Bucket    string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Prefix    string `protobuf:"bytes,6,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PathStyle bool   `protobuf:"varint,7,opt,name=path_style,json=pathStyle,proto3" json:"path_style,omitempty"`
}

func (x *StorageS3Config) Reset() {
	*x = StorageS3Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageS3Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageS3Config) ProtoMessage() {}

func (x *StorageS3Config) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageS3Config.ProtoReflect.Descriptor instead.
func (*StorageS3Config) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{2}
}

func (x *StorageS3Config) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *StorageS3Config) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *StorageS3Config) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *StorageS3Config) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *StorageS3Config) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *StorageS3Config) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *StorageS3Config) GetPathStyle() bool {
	if x != nil {
		return x.PathStyle
	}
	return false
}

type GetStoragesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStoragesRequest) Reset() {
	*x = GetStoragesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoragesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoragesRequest) ProtoMessage() {}

func (x *GetStoragesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoragesRequest.ProtoReflect.Descriptor instead.
func (*GetStoragesRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{3}
}

type GetStoragesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storages []*Storage `protobuf:"bytes,1,rep,name=storages,proto3" json:"storages,omitempty"`
}

func (x *GetStoragesResponse) Reset() {
	*x = GetStoragesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoragesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoragesResponse) ProtoMessage() {}

func (x *GetStoragesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoragesResponse.ProtoReflect.Descriptor instead.
func (*GetStoragesResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{4}
}

func (x *GetStoragesResponse) GetStorages() []*Storage {
	if x != nil {
		return x.Storages
	}
	return nil
}

type AddStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
}

func (x *AddStorageRequest) Reset() {
	*x = AddStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStorageRequest) ProtoMessage() {}

func (x *AddStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStorageRequest.ProtoReflect.Descriptor instead.
func (*AddStorageRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{5}
}

func (x *AddStorageRequest) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type AddStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
}

func (x *AddStorageResponse) Reset() {
	*x = AddStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStorageResponse) ProtoMessage() {}

func (x *AddStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStorageResponse.ProtoReflect.Descriptor instead.
func (*AddStorageResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{6}
}

func (x *AddStorageResponse) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type RemoveStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId string `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
}

func (x *RemoveStorageRequest) Reset() {
	*x = RemoveStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStorageRequest) ProtoMessage() {}

func (x *RemoveStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStorageRequest.ProtoReflect.Descriptor instead.
func (*RemoveStorageRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveStorageRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

type RemoveStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStorageResponse) Reset() {
	*x = RemoveStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStorageResponse) ProtoMessage() {}

func (x *RemoveStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStorageResponse.ProtoReflect.Descriptor instead.
func (*RemoveStorageResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{8}
}

type GetStorageLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStorageLinksRequest) Reset() {
	*x = GetStorageLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageLinksRequest) ProtoMessage() {}

func (x *GetStorageLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageLinksRequest.ProtoReflect.Descriptor instead.
func (*GetStorageLinksRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{9}
}

type GetStorageLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageLinks []*StorageLink `protobuf:"bytes,1,rep,name=storage_links,json=storageLinks,proto3" json:"storage_links,omitempty"`
}

func (x *GetStorageLinksResponse) Reset() {
	*x = GetStorageLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageLinksResponse) ProtoMessage() {}

func (x *GetStorageLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageLinksResponse.ProtoReflect.Descriptor instead.
func (*GetStorageLinksResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{10}
}

func (x *GetStorageLinksResponse) GetStorageLinks() []*StorageLink {
	if x != nil {
		return x.StorageLinks
	}
	return nil
}

type AddStorageLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageLink *StorageLink `protobuf:"bytes,1,opt,name=storage_link,json=storageLink,proto3" json:"storage_link,omitempty"`
}

func (x *AddStorageLinkRequest) Reset() {
	*x = AddStorageLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStorageLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStorageLinkRequest) ProtoMessage() {}

func (x *AddStorageLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStorageLinkRequest.ProtoReflect.Descriptor instead.
func (*AddStorageLinkRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{11}
}

func (x *AddStorageLinkRequest) GetStorageLink() *StorageLink {
	if x != nil {
		return x.StorageLink
	}
	return nil
}

type AddStorageLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageLink *StorageLink `protobuf:"bytes,1,opt,name=storage_link,json=storageLink,proto3" json:"storage_link,omitempty"`
}

func (x *AddStorageLinkResponse) Reset() {
	*x = AddStorageLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStorageLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStorageLinkResponse) ProtoMessage() {}

func (x *AddStorageLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStorageLinkResponse.ProtoReflect.Descriptor instead.
func (*AddStorageLinkResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{12}
}

func (x *AddStorageLinkResponse) GetStorageLink() *StorageLink {
	if x != nil {
		return x.StorageLink
	}
	return nil
}

type CleanStorageLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageLinkId string `protobuf:"bytes,1,opt,name=storage_link_id,json=storageLinkId,proto3" json:"storage_link_id,omitempty"`
}

func (x *CleanStorageLinkRequest) Reset() {
	*x = CleanStorageLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanStorageLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanStorageLinkRequest) ProtoMessage() {}

func (x *CleanStorageLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanStorageLinkRequest.ProtoReflect.Descriptor instead.
func (*CleanStorageLinkRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{13}
}

func (x *CleanStorageLinkRequest) GetStorageLinkId() string {
	if x != nil {
		return x.StorageLinkId
	}
	return ""
}

type CleanStorageLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CleanStorageLinkResponse) Reset() {
	*x = CleanStorageLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanStorageLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanStorageLinkResponse) ProtoMessage() {}

func (x *CleanStorageLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanStorageLinkResponse.ProtoReflect.Descriptor instead.
func (*CleanStorageLinkResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{14}
}

type RemoveStorageLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageLinkId string `protobuf:"bytes,1,opt,name=storage_link_id,json=storageLinkId,proto3" json:"storage_link_id,omitempty"`
}

func (x *RemoveStorageLinkRequest) Reset() {
	*x = RemoveStorageLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStorageLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStorageLinkRequest) ProtoMessage() {}

func (x *RemoveStorageLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStorageLinkRequest.ProtoReflect.Descriptor instead.
func (*RemoveStorageLinkRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveStorageLinkRequest) GetStorageLinkId() string {
	if x != nil {
		return x.StorageLinkId
	}
	return ""
}

type RemoveStorageLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStorageLinkResponse) Reset() {
	*x = RemoveStorageLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStorageLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStorageLinkResponse) ProtoMessage() {}

func (x *RemoveStorageLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStorageLinkResponse.ProtoReflect.Descriptor instead.
func (*RemoveStorageLinkResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{16}
}

type StorageValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
}

func (x *StorageValidateRequest) Reset() {
	*x = StorageValidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageValidateRequest) ProtoMessage() {}

func (x *StorageValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageValidateRequest.ProtoReflect.Descriptor instead.
func (*StorageValidateRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{17}
}

func (x *StorageValidateRequest) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type StorageValidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorageValidateResponse) Reset() {
	*x = StorageValidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageValidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageValidateResponse) ProtoMessage() {}

func (x *StorageValidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageValidateResponse.ProtoReflect.Descriptor instead.
func (*StorageValidateResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{18}
}

type StorageUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context       *FileContext   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Hash          string         `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	BlockType     BlockType      `protobuf:"varint,3,opt,name=block_type,json=blockType,proto3,enum=pixelfs.v1.BlockType" json:"block_type,omitempty"`
	BlockIndex    int64          `protobuf:"varint,4,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	BlockSize     int64          `protobuf:"varint,5,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	BlockSettings *BlockSettings `protobuf:"bytes,6,opt,name=block_settings,json=blockSettings,proto3" json:"block_settings,omitempty"`
}

func (x *StorageUploadRequest) Reset() {
	*x = StorageUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageUploadRequest) ProtoMessage() {}

func (x *StorageUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageUploadRequest.ProtoReflect.Descriptor instead.
func (*StorageUploadRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{19}
}

func (x *StorageUploadRequest) GetContext() *FileContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *StorageUploadRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StorageUploadRequest) GetBlockType() BlockType {
	if x != nil {
		return x.BlockType
	}
	return BlockType_SIZE
}

func (x *StorageUploadRequest) GetBlockIndex() int64 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *StorageUploadRequest) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *StorageUploadRequest) GetBlockSettings() *BlockSettings {
	if x != nil {
		return x.BlockSettings
	}
	return nil
}

type StorageUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId string      `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Type    StorageType `protobuf:"varint,2,opt,name=type,proto3,enum=pixelfs.v1.StorageType" json:"type,omitempty"`
	Url     string      `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *StorageUploadResponse) Reset() {
	*x = StorageUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageUploadResponse) ProtoMessage() {}

func (x *StorageUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageUploadResponse.ProtoReflect.Descriptor instead.
func (*StorageUploadResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{20}
}

func (x *StorageUploadResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *StorageUploadResponse) GetType() StorageType {
	if x != nil {
		return x.Type
	}
	return StorageType_S3
}

func (x *StorageUploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type StorageRemoveBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Path    string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *StorageRemoveBlockRequest) Reset() {
	*x = StorageRemoveBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageRemoveBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRemoveBlockRequest) ProtoMessage() {}

func (x *StorageRemoveBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRemoveBlockRequest.ProtoReflect.Descriptor instead.
func (*StorageRemoveBlockRequest) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{21}
}

func (x *StorageRemoveBlockRequest) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *StorageRemoveBlockRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StorageRemoveBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StorageRemoveBlockResponse) Reset() {
	*x = StorageRemoveBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelfs_v1_storage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageRemoveBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRemoveBlockResponse) ProtoMessage() {}

func (x *StorageRemoveBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pixelfs_v1_storage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRemoveBlockResponse.ProtoReflect.Descriptor instead.
func (*StorageRemoveBlockResponse) Descriptor() ([]byte, []int) {
	return file_pixelfs_v1_storage_proto_rawDescGZIP(), []int{22}
}

var File_pixelfs_v1_storage_proto protoreflect.FileDescriptor

var file_pixelfs_v1_storage_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x66, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2d, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x02, 0x73, 0x33, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xb2, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x70, 0x61, 0x74, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x22, 0x35, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x54, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x41,
	0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a,
	0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47,
	0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0d, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x15, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5e, 0x0a,
	0x19, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1c, 0x0a,
	0x1a, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x15, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33,
	0x10, 0x00, 0x2a, 0x29, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01, 0x32, 0x8f, 0x07,
	0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x22, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x20, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5e, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x25,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x66, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pixelfs_v1_storage_proto_rawDescOnce sync.Once
	file_pixelfs_v1_storage_proto_rawDescData = file_pixelfs_v1_storage_proto_rawDesc
)

func file_pixelfs_v1_storage_proto_rawDescGZIP() []byte {
	file_pixelfs_v1_storage_proto_rawDescOnce.Do(func() {
		file_pixelfs_v1_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_pixelfs_v1_storage_proto_rawDescData)
	})
	return file_pixelfs_v1_storage_proto_rawDescData
}

var file_pixelfs_v1_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pixelfs_v1_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pixelfs_v1_storage_proto_goTypes = []interface{}{
	(StorageType)(0),                   // 0: pixelfs.v1.StorageType
	(StorageNetwork)(0),                // 1: pixelfs.v1.StorageNetwork
	(*Storage)(nil),                    // 2: pixelfs.v1.Storage
	(*StorageLink)(nil),                // 3: pixelfs.v1.StorageLink
	(*StorageS3Config)(nil),            // 4: pixelfs.v1.StorageS3Config
	(*GetStoragesRequest)(nil),         // 5: pixelfs.v1.GetStoragesRequest
	(*GetStoragesResponse)(nil),        // 6: pixelfs.v1.GetStoragesResponse
	(*AddStorageRequest)(nil),          // 7: pixelfs.v1.AddStorageRequest
	(*AddStorageResponse)(nil),         // 8: pixelfs.v1.AddStorageResponse
	(*RemoveStorageRequest)(nil),       // 9: pixelfs.v1.RemoveStorageRequest
	(*RemoveStorageResponse)(nil),      // 10: pixelfs.v1.RemoveStorageResponse
	(*GetStorageLinksRequest)(nil),     // 11: pixelfs.v1.GetStorageLinksRequest
	(*GetStorageLinksResponse)(nil),    // 12: pixelfs.v1.GetStorageLinksResponse
	(*AddStorageLinkRequest)(nil),      // 13: pixelfs.v1.AddStorageLinkRequest
	(*AddStorageLinkResponse)(nil),     // 14: pixelfs.v1.AddStorageLinkResponse
	(*CleanStorageLinkRequest)(nil),    // 15: pixelfs.v1.CleanStorageLinkRequest
	(*CleanStorageLinkResponse)(nil),   // 16: pixelfs.v1.CleanStorageLinkResponse
	(*RemoveStorageLinkRequest)(nil),   // 17: pixelfs.v1.RemoveStorageLinkRequest
	(*RemoveStorageLinkResponse)(nil),  // 18: pixelfs.v1.RemoveStorageLinkResponse
	(*StorageValidateRequest)(nil),     // 19: pixelfs.v1.StorageValidateRequest
	(*StorageValidateResponse)(nil),    // 20: pixelfs.v1.StorageValidateResponse
	(*StorageUploadRequest)(nil),       // 21: pixelfs.v1.StorageUploadRequest
	(*StorageUploadResponse)(nil),      // 22: pixelfs.v1.StorageUploadResponse
	(*StorageRemoveBlockRequest)(nil),  // 23: pixelfs.v1.StorageRemoveBlockRequest
	(*StorageRemoveBlockResponse)(nil), // 24: pixelfs.v1.StorageRemoveBlockResponse
	(*FileContext)(nil),                // 25: pixelfs.v1.FileContext
	(BlockType)(0),                     // 26: pixelfs.v1.BlockType
	(*BlockSettings)(nil),              // 27: pixelfs.v1.BlockSettings
}
var file_pixelfs_v1_storage_proto_depIdxs = []int32{
	0,  // 0: pixelfs.v1.Storage.type:type_name -> pixelfs.v1.StorageType
	1,  // 1: pixelfs.v1.Storage.network:type_name -> pixelfs.v1.StorageNetwork
	4,  // 2: pixelfs.v1.Storage.s3:type_name -> pixelfs.v1.StorageS3Config
	2,  // 3: pixelfs.v1.GetStoragesResponse.storages:type_name -> pixelfs.v1.Storage
	2,  // 4: pixelfs.v1.AddStorageRequest.storage:type_name -> pixelfs.v1.Storage
	2,  // 5: pixelfs.v1.AddStorageResponse.storage:type_name -> pixelfs.v1.Storage
	3,  // 6: pixelfs.v1.GetStorageLinksResponse.storage_links:type_name -> pixelfs.v1.StorageLink
	3,  // 7: pixelfs.v1.AddStorageLinkRequest.storage_link:type_name -> pixelfs.v1.StorageLink
	3,  // 8: pixelfs.v1.AddStorageLinkResponse.storage_link:type_name -> pixelfs.v1.StorageLink
	2,  // 9: pixelfs.v1.StorageValidateRequest.storage:type_name -> pixelfs.v1.Storage
	25, // 10: pixelfs.v1.StorageUploadRequest.context:type_name -> pixelfs.v1.FileContext
	26, // 11: pixelfs.v1.StorageUploadRequest.block_type:type_name -> pixelfs.v1.BlockType
	27, // 12: pixelfs.v1.StorageUploadRequest.block_settings:type_name -> pixelfs.v1.BlockSettings
	0,  // 13: pixelfs.v1.StorageUploadResponse.type:type_name -> pixelfs.v1.StorageType
	2,  // 14: pixelfs.v1.StorageRemoveBlockRequest.storage:type_name -> pixelfs.v1.Storage
	5,  // 15: pixelfs.v1.StorageService.GetStorages:input_type -> pixelfs.v1.GetStoragesRequest
	7,  // 16: pixelfs.v1.StorageService.AddStorage:input_type -> pixelfs.v1.AddStorageRequest
	9,  // 17: pixelfs.v1.StorageService.RemoveStorage:input_type -> pixelfs.v1.RemoveStorageRequest
	11, // 18: pixelfs.v1.StorageService.GetStorageLinks:input_type -> pixelfs.v1.GetStorageLinksRequest
	13, // 19: pixelfs.v1.StorageService.AddStorageLink:input_type -> pixelfs.v1.AddStorageLinkRequest
	15, // 20: pixelfs.v1.StorageService.CleanStorageLink:input_type -> pixelfs.v1.CleanStorageLinkRequest
	17, // 21: pixelfs.v1.StorageService.RemoveStorageLink:input_type -> pixelfs.v1.RemoveStorageLinkRequest
	21, // 22: pixelfs.v1.StorageService.Upload:input_type -> pixelfs.v1.StorageUploadRequest
	19, // 23: pixelfs.v1.StorageService.Validate:input_type -> pixelfs.v1.StorageValidateRequest
	23, // 24: pixelfs.v1.StorageService.RemoveBlock:input_type -> pixelfs.v1.StorageRemoveBlockRequest
	6,  // 25: pixelfs.v1.StorageService.GetStorages:output_type -> pixelfs.v1.GetStoragesResponse
	8,  // 26: pixelfs.v1.StorageService.AddStorage:output_type -> pixelfs.v1.AddStorageResponse
	10, // 27: pixelfs.v1.StorageService.RemoveStorage:output_type -> pixelfs.v1.RemoveStorageResponse
	12, // 28: pixelfs.v1.StorageService.GetStorageLinks:output_type -> pixelfs.v1.GetStorageLinksResponse
	14, // 29: pixelfs.v1.StorageService.AddStorageLink:output_type -> pixelfs.v1.AddStorageLinkResponse
	16, // 30: pixelfs.v1.StorageService.CleanStorageLink:output_type -> pixelfs.v1.CleanStorageLinkResponse
	18, // 31: pixelfs.v1.StorageService.RemoveStorageLink:output_type -> pixelfs.v1.RemoveStorageLinkResponse
	22, // 32: pixelfs.v1.StorageService.Upload:output_type -> pixelfs.v1.StorageUploadResponse
	20, // 33: pixelfs.v1.StorageService.Validate:output_type -> pixelfs.v1.StorageValidateResponse
	24, // 34: pixelfs.v1.StorageService.RemoveBlock:output_type -> pixelfs.v1.StorageRemoveBlockResponse
	25, // [25:35] is the sub-list for method output_type
	15, // [15:25] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pixelfs_v1_storage_proto_init() }
func file_pixelfs_v1_storage_proto_init() {
	if File_pixelfs_v1_storage_proto != nil {
		return
	}
	file_pixelfs_v1_fs_proto_init()
	file_pixelfs_v1_block_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pixelfs_v1_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageS3Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoragesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoragesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStorageLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStorageLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanStorageLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanStorageLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStorageLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStorageLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageValidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageValidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageRemoveBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelfs_v1_storage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageRemoveBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pixelfs_v1_storage_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Storage_S3)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pixelfs_v1_storage_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pixelfs_v1_storage_proto_goTypes,
		DependencyIndexes: file_pixelfs_v1_storage_proto_depIdxs,
		EnumInfos:         file_pixelfs_v1_storage_proto_enumTypes,
		MessageInfos:      file_pixelfs_v1_storage_proto_msgTypes,
	}.Build()
	File_pixelfs_v1_storage_proto = out.File
	file_pixelfs_v1_storage_proto_rawDesc = nil
	file_pixelfs_v1_storage_proto_goTypes = nil
	file_pixelfs_v1_storage_proto_depIdxs = nil
}
